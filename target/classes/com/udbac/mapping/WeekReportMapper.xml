<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.udbac.dao.WeekReportDao">
    
     <!-- 基础数据 -->
    <select id="listInfo" resultMap="weekMap">
		SELECT 
  		act.activity_name,act.activity_code,media.media_name,sche.unit,
  		extend.support_exposure,extend.support_click,
  		sche.group_id,
  		sche.url_pc,sche.terminal_type,point_location,
  		put_function,customer.customer_name,customer.customer_code,
		fore.put_date,fore.mic,fore.put_value,	
        case when sche.imp_data_caliber ='1' then fore.clean_imp_pv  
        when sche.imp_data_caliber ='2' then fore.dclean_imp_pv 
        else fore.dirty_imp_pv 
        end   impPv ,
        case when sche.imp_data_caliber ='1' then fore.clean_imp_uv  
        when sche.imp_data_caliber ='2' then fore.dclean_imp_uv 
        else fore.dirty_imp_uv 
        end   impUv,
        case when sche.clk_data_caliber ='1' then fore.clean_clk_pv  
        when sche.clk_data_caliber ='2' then fore.dclean_clk_pv 
        else fore.dirty_clk_pv 
        end   clkPv ,
        case when sche.clk_data_caliber ='1' then fore.clean_clk_uv  
        when sche.clk_data_caliber ='2' then fore.dclean_clk_uv 
        else fore.dirty_clk_uv 
        end   clkUv,
       	case when  sche.exposure_avg is null then '-1'
       	when sche.exposure_avg = '' then '-1'
	    else sche.exposure_avg
        end  exposure_avg,
       	case when sche.click_avg is null then '-1'
       	when sche.click_avg = '' then '-1'
       	else sche.click_avg
        end click_avg,
        fore.visit,fore.visitor,fore.click,fore.pageView,fore.bounceTimes,fore.viewTime
	FROM 
		tb_amp_basic_activity_info act,
		tb_amp_basic_media_info media,
		tb_amp_basic_customer_info customer,
	( select  
			foreD.mic ,foreD.put_date,foreD.clean_imp_pv ,foreD.dclean_imp_pv,foreD.dirty_imp_pv,foreD.clean_imp_uv,
			foreD.dclean_imp_uv,foreD.dirty_imp_uv,foreD.clean_clk_pv,foreD.dclean_clk_pv,foreD.dirty_clk_pv,foreD.clean_clk_uv,
			foreD.dclean_clk_uv,foreD.dirty_clk_uv, foreD.activity_code , cale.put_value,
		    case when  backD.vv is null then -1 
	        else backD.vv end visit,
	        case when  backD.uv is null then -1 
	        else backD.uv end visitor,
	        case when backD.clk is null then -1
			else backD.clk end click,
	        case when backD.pv is null then -1
	        else backD.pv end pageView,
	        case when backD.bounce_times is null then -1
	        else backD.bounce_times 
	        end bounceTimes,
	        case when backD.time_spent is null then -1
	        else backD.time_spent end viewTime
	    from  
	    	tb_amp_sum_fore_d foreD 
	    full join
			tb_amp_sum_back_d backD
		on	
			foreD.put_date = backD.daytime and foreD.mic=backD.mic ,
			 tb_amp_basic_schedule_calendar_info cale 
	where 
			(cale.mic=foreD.mic or cale.mic = backD.mic)
		and (cale.put_date=foreD.put_date or cale.put_date = backD.daytime)
		and (cale.put_date=foreD.put_date or cale.put_date = backD.daytime)
		and( foreD.clean_imp_pv !=0 or foreD.dclean_imp_pv !=0 or foreD.dirty_imp_pv !=0
		or foreD.clean_imp_uv!=0 or foreD.dclean_imp_uv !=0 or foreD.dirty_imp_uv !=0
		or foreD.clean_clk_pv !=0 or foreD.dclean_clk_pv !=0 or foreD.dirty_clk_pv !=0
		or foreD.clean_clk_uv !=0 or foreD.dclean_clk_uv !=0 or foreD.dirty_clk_uv !=0)
		order by  foreD.activity_code,mic
		) fore 
		full join 
			tb_amp_basic_schedule_extend_info extend
		on  fore.mic=extend.mic 
		full join 
			tb_amp_sum_fore_w forew
			on fore.mic = forew.mic and fore.put_date = forew.true_start,
			tb_amp_basic_schedule_info sche
	where 
		 	 fore.mic=sche.mic 
		and act.activity_code = sche.activity_code 
		and media.media_id = sche.media_id ::integer 
	    and	act.customer_id :: integer = customer.customer_id::integer
	    <if test="cusCode!=null and cusCode!=''">
		and    customer.customer_code = #{cusCode}
		</if>
		and	fore.put_date between #{startDate} and #{endDate}
		<if test="actCode!=null and actCode!=''">
		and act.activity_code = #{actCode}
		</if>
		<if test="mediaName!=null and mediaName!=''">
			<![CDATA[ and media.media_name <> #{mediaName} ]]>
		</if>
			order by 
			<!-- activity_name,media_name,point_location,put_date,fore.mic,customer_name,act.activity_code -->
			<!-- media.media_id,activity_code,fore.mic,put_date -->
			put_date,activity_name,media_name,sche.group_id		
    </select>
    
    
    
    <!-- 分媒体数据 -->
    <select id="listWeekInfo" resultMap="weekMap">
		SELECT 
  		act.activity_name,act.activity_code,media.media_name,sche.unit,
  		extend.support_exposure,extend.support_click,
  		sche.url_pc,sche.terminal_type,point_location,
  		put_function,customer.customer_name,customer.customer_code,
		fore.put_date,fore.mic,fore.put_value,	
		sche.group_id,
        case when sche.imp_data_caliber ='1' then fore.clean_imp_pv  
        when sche.imp_data_caliber ='2' then fore.dclean_imp_pv 
        else fore.dirty_imp_pv 
        end   impPv ,
        case when sche.imp_data_caliber ='1' then fore.clean_imp_uv  
        when sche.imp_data_caliber ='2' then fore.dclean_imp_uv 
        else fore.dirty_imp_uv 
        end   impUv,
        case when sche.clk_data_caliber ='1' then fore.clean_clk_pv  
        when sche.clk_data_caliber ='2' then fore.dclean_clk_pv 
        else fore.dirty_clk_pv 
        end   clkPv ,
        case when sche.clk_data_caliber ='1' then fore.clean_clk_uv  
        when sche.clk_data_caliber ='2' then fore.dclean_clk_uv 
        else fore.dirty_clk_uv 
        end   clkUv,
       	case when  sche.exposure_avg is null then '-1'
       	when sche.exposure_avg = '' then '-1'
	    else sche.exposure_avg
        end  exposure_avg,
       	case when sche.click_avg is null then '-1'
       	when sche.click_avg = '' then '-1'
       	else sche.click_avg
        end click_avg,
        fore.visit,fore.visitor,fore.click,fore.pageView,fore.bounceTimes,fore.viewTime,
        forew._imppv,forew._impuv,forew._clkpv,forew._clkuv
	FROM 
		tb_amp_basic_activity_info act,
		tb_amp_basic_media_info media,
		tb_amp_basic_customer_info customer,
			    ( 			
		select 
		forew.mic, 
		sum(case when sche.imp_data_caliber ='1' then forew.clean_imp_pv  
			 when sche.imp_data_caliber ='2' then forew.dclean_imp_pv 
			 else forew.dirty_imp_pv 
			 end) _imppv,
		sum(case when sche.imp_data_caliber ='1' then forew.clean_imp_uv  
			 when sche.imp_data_caliber ='2' then forew.dclean_imp_uv 
			 else forew.dirty_imp_uv 
		  	 end)  _impuv,
		sum(case when sche.clk_data_caliber ='1' then forew.clean_clk_pv  
			 when sche.clk_data_caliber ='2' then forew.dclean_clk_pv 
			 else forew.dirty_clk_pv 
			 end)  _clkpv ,
		sum(case when sche.clk_data_caliber ='1' then forew.clean_clk_uv  
			 when sche.clk_data_caliber ='2' then forew.dclean_clk_uv 
			 else forew.dirty_clk_uv 
			 end)  _clkuv		 
		from
		tb_amp_basic_schedule_info sche,
		tb_amp_basic_schedule_calendar_info cale
		full join 
		tb_amp_sum_fore_w forew
		on cale.mic = forew.mic  and cale.put_date = forew.true_start
		where
			sche.activity_code = forew.activity_code
		and sche.mic = forew.mic
		and forew.start_date between #{startDate} and #{endDate}
		and( forew.clean_imp_pv !=0 or forew.dclean_imp_pv !=0 or forew.dirty_imp_pv !=0
		or forew.clean_imp_uv!=0 or forew.dclean_imp_uv !=0 or forew.dirty_imp_uv !=0
		or forew.clean_clk_pv !=0 or forew.dclean_clk_pv !=0 or forew.dirty_clk_pv !=0
		or forew.clean_clk_uv !=0 or forew.dclean_clk_uv !=0 or forew.dirty_clk_uv !=0)
		group by forew.mic
		order by forew.mic  --周表汇总前端数据
		) forew,
	( select  
			foreD.mic ,foreD.put_date,foreD.clean_imp_pv ,foreD.dclean_imp_pv,foreD.dirty_imp_pv,foreD.clean_imp_uv,
			foreD.dclean_imp_uv,foreD.dirty_imp_uv,foreD.clean_clk_pv,foreD.dclean_clk_pv,foreD.dirty_clk_pv,foreD.clean_clk_uv,
			foreD.dclean_clk_uv,foreD.dirty_clk_uv, foreD.activity_code , cale.put_value,
		    case when  backD.vv is null then -1 
	        else backD.vv end visit,
	        case when  backD.uv is null then -1 
	        else backD.uv end visitor,
	        case when backD.clk is null then -1
			else backD.clk end click,
	        case when backD.pv is null then -1
	        else backD.pv end pageView,
	        case when backD.bounce_times is null then -1
	        else backD.bounce_times 
	        end bounceTimes,
	        case when backD.time_spent is null then -1
	        else backD.time_spent end viewTime
	    from  
	    	tb_amp_sum_fore_d foreD 
	    full join
			tb_amp_sum_back_d backD
		on	
			foreD.put_date = backD.daytime and foreD.mic=backD.mic ,
			 tb_amp_basic_schedule_calendar_info cale 
	where 
			(cale.mic=foreD.mic or cale.mic = backD.mic)
		and (cale.put_date=foreD.put_date or cale.put_date = backD.daytime)
		and (cale.put_date=foreD.put_date or cale.put_date = backD.daytime)
		and( foreD.clean_imp_pv !=0 or foreD.dclean_imp_pv !=0 or foreD.dirty_imp_pv !=0
		or foreD.clean_imp_uv!=0 or foreD.dclean_imp_uv !=0 or foreD.dirty_imp_uv !=0
		or foreD.clean_clk_pv !=0 or foreD.dclean_clk_pv !=0 or foreD.dirty_clk_pv !=0
		or foreD.clean_clk_uv !=0 or foreD.dclean_clk_uv !=0 or foreD.dirty_clk_uv !=0)
		order by  foreD.activity_code,mic
		) fore 
		full join 
			tb_amp_basic_schedule_extend_info extend
		on  fore.mic=extend.mic ,
			tb_amp_basic_schedule_info sche
	where 
		 	 fore.mic=sche.mic 
		and foreW.mic = fore.mic
		and foreW.mic = extend.mic
		and act.activity_code = sche.activity_code 
		and media.media_id = sche.media_id ::integer 
	    and	act.customer_id :: integer = customer.customer_id::integer
	    <if test="cusCode!=null and cusCode!=''">
		and    customer.customer_code = #{cusCode}
		</if>
		and	fore.put_date between #{startDate} and #{endDate}
		<if test="actCode!=null and actCode!=''">
		and act.activity_code = #{actCode}
		</if>
		<if test="mediaName!=null and mediaName!=''">
			<![CDATA[ and media.media_name <> #{mediaName} ]]>
		</if>
		
		order by 
			activity_name,media_name,fore.mic,customer_name,act.activity_code,point_location,put_date
    </select>
    <resultMap type="com.udbac.entity.WeekDataExport" id="weekMap">
        
        <result column="customer_name" property="customerName"/>
        <result column="customer_code" property="customerCode"/>
        <result column="activity_code" property="activityCode"/>
        <result column="activity_name" property="activityName"/>
        <result column="media_name" property="mediaName"/>
        <result column="point_location" property="pointLocation"/>
        <result column="put_function" property="putFunction"/>
        <result column="put_date" property="putDate"/>
        <result column="fore_mic" property="mic"/>
        <result column="back_mic" property="mic"/>
        <result column="support_exposure" property="supportClick"/>
        <result column="support_click" property="supportExposure"/>
        <result column="vv" property="visit"/>
        <result column="uv" property="visitor"/>
        <result column="pv" property="pageView"/>
        <result column="clk" property="click"/>
        <result column="bounce_times" property="bounceTimes"/>
        <result column="time_spent" property="viewTime"/>
        <result column="bounce_rate" property="bounceRate"/>
        <result column="start_date" property="startDate"/>
        <result column="end_date" property="endDate"/>
        <result column="exposure_avg" property="exposureAvg"/>
        <result column="click_avg" property="clickAvg"/>
        <result column="url_pc" property="urlPc"/>
        <result column="unit" property="unit"/>
        
        <result column="group_id" property="group_id"/>
        <result column="period_frequency" property="periodFrequency"/>
        
        <result column="_imppv" property="sumImpPv"/>
        <result column="_impuv" property="sumImpUv"/>
        <result column="_clkpv" property="sumClkPv"/>
        <result column="_clkuv" property="sumClkUv"/>
        <result column="_visit" property="sumVisit"/>
        <result column="_visitor" property="sumVisitor"/>
        <result column="_pageview" property="sumPageView"/>
        <result column="_click" property="sumClick"/>
        <result column="_bouncetimes" property="sumBounceTimes"/>
        <result column="_bouncerate" property="sumBounceRate"/>
        <result column="_viewtime" property="sumViewTime"/>
    </resultMap>
    
    <!-- 汇总数据 -->
    <select id="listWeekSumInfo" resultMap="weekMap">
		SELECT 
			   
			   M.ACTIVITY_NAME,
			   M.MEDIA_NAME,
		       M.ACTIVITY_CODE,
		       
		       M.UNIT,
		       M.SUPPORT_EXPOSURE,
		       M.SUPPORT_CLICK,
		       M.URL_PC,
		       M.GROUP_ID,
		       M.TERMINAL_TYPE,
		       
		       M.POINT_LOCATION,
		       M.PUT_FUNCTION,
		       M.CUSTOMER_NAME,
		       M.CUSTOMER_CODE,
		       M.MIC,
		       M.PERIOD_FREQUENCY,
		       M.IMPPV,
		       M.IMPUV,
		       M.CLKPV,
		       M.CLKUV,
		       sumDay.sumDate,
		       SUM(M.PUT_VALUE) AS PUT_VALUE,
		       SUM(COALESCE(N.VV,0)) AS VISIT,
		       SUM(COALESCE(N.UV,0)) AS VISITOR,
		       SUM(COALESCE(N.CLK,0)) AS CLICK,
		       SUM(COALESCE(N.PV,0)) AS PAGEVIEW,
		       SUM(COALESCE(N.TIME_SPENT,0) / sumDay.sumDate) AS VIEWTIME,
		       SUM(COALESCE(N.BOUNCE_TIMES,0)) AS BOUNCETIMES,
		       SUM(CASE WHEN M.EXPOSURE_AVG  = '' THEN -1  WHEN M.EXPOSURE_AVG IS NULL then '-1' ELSE M.EXPOSURE_AVG::NUMERIC END) AS EXPOSUREAVG,
		       SUM(CASE WHEN M.CLICK_AVG = ''  THEN 0 WHEN M.CLICK_AVG IS NULL then '-1'ELSE M.CLICK_AVG::NUMERIC END) AS CLICKAVG
		  FROM (SELECT A.ACTIVITY_CODE,
		               A.ACTIVITY_NAME,
		               B.CUSTOMER_CODE,
		               B.CUSTOMER_NAME,
		               C.MEDIA_NAME,
		               D.MIC,
		               D.UNIT,
		               D.URL_PC,
		               D.GROUP_ID,
		               D.TERMINAL_TYPE,
		               D.EXPOSURE_AVG,
		               D.CLICK_AVG,
		               E.SUPPORT_EXPOSURE,
		               E.SUPPORT_CLICK,
		               E.POINT_LOCATION,
		               E.PUT_FUNCTION,
		               F.PUT_DATE,
		               (CASE WHEN F.PUT_VALUE IS NULL THEN 0 ELSE F.PUT_VALUE END) AS PUT_VALUE,
		               (CASE WHEN D.PERIOD_FREQUENCY IS NULL THEN -1 ELSE D.PERIOD_FREQUENCY::INTEGER END) AS PERIOD_FREQUENCY,
		               (CASE WHEN D.IMP_DATA_CALIBER = '1' THEN COALESCE(G.CLEAN_IMP_PV,0)
		               	     WHEN D.IMP_DATA_CALIBER = '2' THEN COALESCE(G.DCLEAN_IMP_PV,0)
		               	     ELSE COALESCE(G.DIRTY_IMP_PV,0) 
		               	END) AS IMPPV,
		               (CASE WHEN D.IMP_DATA_CALIBER = '1' THEN COALESCE(G.CLEAN_IMP_UV,0)
		               	     WHEN D.IMP_DATA_CALIBER = '2' THEN COALESCE(G.DCLEAN_IMP_UV,0)
		               	     ELSE COALESCE(G.DIRTY_IMP_UV,0) 
		               	END) AS IMPUV,
		               (CASE WHEN D.CLK_DATA_CALIBER = '1' THEN COALESCE(G.CLEAN_CLK_PV,0)
		               	     WHEN D.CLK_DATA_CALIBER = '2' THEN COALESCE(G.DCLEAN_CLK_PV,0)
		               	     ELSE COALESCE(G.DIRTY_CLK_PV,0) 
		               	END) AS CLKPV,
		               (CASE WHEN D.CLK_DATA_CALIBER = '1' THEN COALESCE(G.CLEAN_CLK_UV,0)
		               	     WHEN D.CLK_DATA_CALIBER = '2' THEN COALESCE(G.DCLEAN_CLK_UV,0)
		               	     ELSE COALESCE(G.DIRTY_CLK_UV,0) 
		               	END) AS CLKUV
		          FROM TB_AMP_BASIC_ACTIVITY_INFO A,
		               TB_AMP_BASIC_CUSTOMER_INFO B,
		               TB_AMP_BASIC_MEDIA_INFO C,
		               TB_AMP_BASIC_SCHEDULE_INFO D,
		               TB_AMP_BASIC_SCHEDULE_EXTEND_INFO E,
		               TB_AMP_BASIC_SCHEDULE_CALENDAR_INFO F,
		               TB_AMP_SUM_FORE_W G
		         WHERE A.CUSTOMER_ID = B.CUSTOMER_ID::text
		               AND A.ACTIVITY_CODE = D.ACTIVITY_CODE 
		               AND C.MEDIA_ID::TEXT = D.MEDIA_ID 
		               AND D.MIC = E.MIC 
		               AND D.MIC = F.MIC 
		               AND D.MIC = G.MIC
		               <if test="actCode!=null and actCode!=''">
							and A.ACTIVITY_CODE = #{actCode}
					   </if>
		               <if test="cusCode!=null and cusCode!=''">
		               		AND B.CUSTOMER_CODE =  #{cusCode}
		               </if>
		               <if test="mediaName!=null and mediaName!=''">
		              	   <![CDATA[ AND C.MEDIA_NAME <> #{mediaName} ]]>
		               </if>
		               AND F.PUT_DATE BETWEEN G.TRUE_START AND G.TRUE_END
		               AND G.START_DATE =#{startDate}::TIMESTAMP
		               AND F.put_date between #{startDate} AND #{endDate}) M 
		       LEFT OUTER JOIN TB_AMP_SUM_BACK_D N ON M.MIC = N.MIC AND M.PUT_DATE = N.DAYTIME
		       LEFT OUTER JOIN
			       ( select count(foreD.mic) sumDate,foreD.mic
					 from 
						tb_amp_sum_fore_d foreD
					 where foreD.put_date between #{startDate} AND #{endDate}
					 group by foreD.mic
					 order by foreD.mic ) sumDay on  M.MIC = sumDay.MIC
		 GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20
		 order by 1,2,8,M.MIC
    </select>
    
    
     <resultMap type="com.udbac.entity.SHWeekDataExport" id="shweekMap">
        <result column="activity_code" property="activityCode"/>
        <result column="activity_name" property="activityName"/>
        <result column="media_name" property="mediaName"/>
        <result column="media_type" property="mediaType"/>
        <result column="point_location" property="pointLocation"/>
        <result column="put_function" property="putFunction"/>
        <result column="terminal_type" property="terminalType"/>
        <result column="mic" property="mic"/>
        <result column="vv" property="visit"/>
        <result column="uv" property="visitor"/>
        <result column="pv" property="pageView"/>
        <result column="clk" property="click"/>
        <result column="bounce_times" property="bounceTimes"/>
        <result column="time_spent" property="viewTime"/>
        <result column="true_start" property="startDate"/>
        <result column="true_end" property="endDate"/>
        <result column="exposure_avg" property="exposureAvg"/>
        <result column="click_avg" property="clickAvg"/>
        <result column="url_pc" property="urlPc"/>
        <result column="unit" property="unit"/>
        <result column="put_value" property="putValue"/>
    </resultMap>
    
    <!-- 上海周报数据 -->
    <select id="listSHWeekInfo" resultMap="shweekMap">
    	select  
	    back.sumDay,fore.true_start,fore.true_end,act.activity_name,act.activity_code,sche.mic,sche.terminal_type,sche.unit,
	    media.media_type,media_name,ext.point_location,
	    case when sche.imp_data_caliber ='1' then fore.clean_imp_pv  
	    when sche.imp_data_caliber ='2' then fore.dclean_imp_pv 
	    else fore.dirty_imp_pv 
	    end   impPv ,
	    case when sche.imp_data_caliber ='1' then fore.clean_imp_uv  
	    when sche.imp_data_caliber ='2' then fore.dclean_imp_uv 
	    else fore.dirty_imp_uv 
	    end   impUv,
	    case when sche.clk_data_caliber ='1' then fore.clean_clk_pv  
	    when sche.clk_data_caliber ='2' then fore.dclean_clk_pv 
	    else fore.dirty_clk_pv 
	    end   clkPv ,
	    case when sche.clk_data_caliber ='1' then fore.clean_clk_uv  
	    when sche.clk_data_caliber ='2' then fore.dclean_clk_uv 
	    else fore.dirty_clk_uv 
	    end   clkUv,
	    case when  sche.exposure_avg is null then '-1'
	   	when sche.exposure_avg = '' then '-1'
	    else sche.exposure_avg :: integer * back.sumDay
	    end  exposure_avg,
	   	case when sche.click_avg is null then '-1'
	   	when sche.click_avg = '' then '-1'
	   	else sche.click_avg :: integer * back.sumDay
	    end click_avg,
	    back.vv,back.uv,back.pv,back.clk,back.bouncetimes,back.timespent
	from 
	   (select count(cale.mic) as sumDay,cale.mic,
	       sum(back.vv) vv,sum(back.uv) uv,sum(back.clk) clk,sum(back.pv) pv,
	       sum(back.bounce_times) bouncetimes,sum(time_spent * vv) / sum(vv) timespent
			from 
			tb_amp_basic_schedule_calendar_info cale
			full join 
			tb_amp_sum_back_d back
			on back.daytime = cale.put_date and back.mic = cale.mic
			where 
				cale.put_date between #{startDate} and #{endDate}
			group by cale.mic)back 
	  full join
	  tb_amp_basic_schedule_info sche
	  on back.mic = sche.mic 
	  full join
	  tb_amp_basic_schedule_extend_info ext
	  on ext.mic = back.mic and sche.mic = ext.mic
	  full join
	  tb_amp_sum_fore_w fore 
	   on sche.mic = fore.mic and sche.activity_code = fore.activity_code 
	   and back.mic = fore.mic
	   full join 
	   tb_amp_basic_media_info media
	   on media.media_id = sche.media_id::integer,
	   tb_amp_basic_activity_info act,
	   tb_amp_basic_customer_info cus
	where
	   fore.start_date between #{startDate} and #{endDate}
	   
	   and act.activity_code = sche.activity_code
	   and act.customer_id::integer = cus.customer_id
	   <if test="cusCode!=null and cusCode!=''">
	    and cus.customer_code = #{cusCode}
	   </if>
	   <if test="actCode!=null and actCode!=''">
	    and act.activity_code = #{actCode}
	    </if>
    </select>
    
    <select id="listSHSumWeekInfo" resultMap="shweekMap">
		select 
			 media.media_name,
		    sum(case when sche.imp_data_caliber ='1' then fore.clean_imp_pv  
		    when sche.imp_data_caliber ='2' then fore.dclean_imp_pv 
		    else fore.dirty_imp_pv 
		    end) impPv,
		    sum(case when sche.clk_data_caliber ='1' then fore.clean_clk_pv  
		    when sche.clk_data_caliber ='2' then fore.dclean_clk_pv 
		    else fore.dirty_clk_pv 
		    end) clkPv
		from
		    tb_amp_basic_schedule_info sche
		    full join
			tb_amp_sum_fore_w fore
			on sche.mic = fore.mic,
			tb_amp_basic_media_info media,
			tb_amp_basic_activity_info act,
		    tb_amp_basic_customer_info cus
		where 
			media.media_id = sche.media_id::integer    
			and fore.start_date between #{startDate} and #{endDate}
			and sche.activity_code = act.activity_code
			and act.customer_id::integer = cus.customer_id
			<if test="cusCode!=null and cusCode!=''">
		    and cus.customer_code = #{cusCode}
		    </if>
		    <if test="actCode!=null and actCode!=''">
		    and act.activity_code = #{actCode}
		    </if>
			group by media.media_name
    </select>
</mapper>