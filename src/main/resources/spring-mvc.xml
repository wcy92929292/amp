<?xml version="1.0" encoding="UTF-8"?>
<!-- 查找最新的schemaLocation 访问 http://www.springframework.org/schema/ -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd   
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.0.xsd   
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd   
        ">


	<!-- 最重要:::如果放在spring-context.xml中，这里的aop设置将不会生效 -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true" /> -->
	<mvc:annotation-driven />

	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.udbac.controller" />
	<context:component-scan base-package="com.udbac" />

	<!-- <bean id="logService" class="com.udbac.util.aop.LogAspect"></bean> 
		日志记录业务逻辑对象 <bean id="logServiceI" class="com.udbac.service.impl.LogServiceImpl"></bean> -->
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />	<!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/page/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>

	<!-- 使用ehcache缓存 -->
	<bean id="ehCacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
	</bean>

	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/page/error_fileupload.jsp页面 -->
				<prop
					key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>
			</props>
		</property>
	</bean>

	<!-- 拦截器 -->
	<mvc:interceptors>
		<!-- 登陆权限过滤，未登陆返回401 -->
		<mvc:interceptor>
			<mvc:mapping path="/schedule/*" />
			<mvc:mapping path="/media/*" />
			<mvc:mapping path="/user/queryUserById.do" />
			<mvc:mapping path="/updateUrl/*" />
			<mvc:mapping path="/report/*" />
			<mvc:mapping path="/check/*" />
			<mvc:mapping path="/onceCheck/*" />
			<mvc:mapping path="/real/*" />
			<bean class="com.udbac.filter.LoginInterceptor" />
		</mvc:interceptor>

		<!-- URL变更过滤，没有权限返回401 -->
		<mvc:interceptor>
			<mvc:mapping path="/updateUrl/*" />
			<bean class="com.udbac.filter.UpdateUrlInterceptor" />
		</mvc:interceptor>

		<!-- 排期插码，没有权限返回401 -->
		<!-- <mvc:interceptor> <mvc:mapping path="*"/> <bean class="com.udbac.filter.AuthoriseInterceptor"/> 
			</mvc:interceptor> -->


	</mvc:interceptors>


</beans>




















