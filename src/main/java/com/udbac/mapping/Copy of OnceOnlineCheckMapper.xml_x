<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.udbac.dao.OnceOnlineCheckDao">

	<!-- <cache readOnly="true" type="org.mybatis.caches.ehcache.LoggingEhcache">
		<property name="timeToIdleSeconds" value="1800" />
		<property name="timeToLiveSeconds" value="1800" />
		<property name="maxEntriesLocalHeap" value="1000" />
		<property name="maxEntriesLocalDisk" value="10000000" />
		<property name="memoryStoreEvictionPolicy" value="LRU" />
	</cache>  -->

	<!-- 已经上线的详细信息 -->
	<select id="queryOnlineInfo" parameterType="java.util.List"
		resultType="com.udbac.entity.OnlineCheckInfo">
		select ect.point_location,
		       ect.put_function,
		       act.activity_name,
		       act.activity_code,
		       cus.customer_name,
		       media.media_name,
		       fav.collect_user,
		       calendar.mic,
		       calendar.online_state,
		       calendar.put_date,
		       calendar.put_value,
		       calendar.exposure_file,
		       calendar.click_file,
		       calendar.after_file,
		       calendar.last_state_id,
		       calendar.now_state_id,
		       moni.click,
		       moni.pv,
		       sche.click_avg,
		       sche.exposure_avg,
		       ect.support_click,
		       ect.support_exposure,
		       sche.unit,
		       calendar.put_value
		from tb_amp_basic_schedule_info as sche
		left join tb_amp_basic_media_info media on media.media_id = sche.media_id::integer
		left join tb_amp_basic_schedule_extend_info ect on ect.mic = sche.mic,
		                                                   tb_amp_basic_activity_info as act
		left join tb_amp_basic_customer_info as cus on cus.customer_id = act.customer_id::integer,
		                                               tb_amp_basic_schedule_calendar_info as calendar
		left join tb_amp_basic_favorites_info fav on fav.mic = calendar.mic
		and fav.put_date = calendar.put_date
		left join tb_amp_basic_user_info as users on fav.collect_user = users.user_name
		left join
		  (select mic,
		          to_char(daytime, 'yyyy-mm-dd') as moni_day,
		          sum(clean_clk_pv) as click,
		          sum(clean_imp_pv) as pv
		   from tb_amp_basic_hour_monitor_date
		   where to_char(daytime, 'yyyy-mm-dd') = #{select_date}
		   group by mic,
		            to_char(daytime, 'yyyy-mm-dd')) as moni on moni.mic = calendar.mic
		   and moni.moni_day = to_char(calendar.put_date, 'yyyy-mm-dd')
		   where calendar.mic = sche.mic
		   and act.activity_code = sche.activity_code
		   <if test="cusname!=null and cusname!='' ">
					and cus.customer_name = #{cusname}
				</if>
				<if test="mic!=null and mic!='' ">
					and calendar.mic like concat('%',#{mic},'%')
				</if>
				<if test="state!=null and state!='' ">
					and calendar.online_state = #{state}
				</if>
		   and to_char(calendar.put_date, 'yyyy-mm-dd') = #{select_date}
		   <![CDATA[and  (media_name <>  '百度' or ect.point_location =  '百度睿投' )]]>
		   <if test="userName!=null and userName!='' ">
			and fav.collect_user = #{userName}
		   </if>
		union
		select ect.point_location,
		       ect.put_function,
		       act.activity_name,
		       act.activity_code,
		       cus.customer_name,
		       media.media_name,
		       fav.collect_user,
		       calendar.mic,
		       calendar.online_state,
		       calendar.put_date,
		       calendar.put_value,
		       calendar.exposure_file,
		       calendar.click_file,
		       calendar.after_file,
		       calendar.last_state_id,
		       calendar.now_state_id,
		       moni.click,
		       moni.pv,
		       sche.click_avg,
		       sche.exposure_avg,
		       ect.support_click,
		       ect.support_exposure,
		       sche.unit,
		       calendar.put_value
		from
		  (select mic,
		          to_char(daytime, 'yyyy-mm-dd') as moni_day,
		          sum(clean_clk_pv) as click,
		          sum(clean_imp_pv) as pv
		   from tb_amp_basic_hour_monitor_date
		   where to_char(daytime, 'yyyy-mm-dd') = #{select_date}
		   group by mic,
		            to_char(daytime, 'yyyy-mm-dd')) as moni
		  left join tb_amp_basic_schedule_info as sche on moni.mic = sche.mic
		  left join tb_amp_basic_media_info media on media.media_id = sche.media_id::integer
		  left join tb_amp_basic_schedule_extend_info ect on ect.mic = sche.mic,
		                                                   tb_amp_basic_activity_info as act
		  left join tb_amp_basic_customer_info as cus on cus.customer_id = act.customer_id::integer,
		                                               tb_amp_basic_schedule_calendar_info as calendar
		  left join tb_amp_basic_favorites_info fav on fav.mic = calendar.mic
		  and fav.put_date = calendar.put_date
		  left join tb_amp_basic_user_info as users on fav.collect_user = users.user_name
		  where calendar.mic = sche.mic
		  and moni.mic = calendar.mic
		  and moni.moni_day = to_char(calendar.put_date, 'yyyy-mm-dd')
		  and act.activity_code = sche.activity_code
		  <if test="cusname!=null and cusname!='' ">
					and cus.customer_name = #{cusname}
				</if>
				<if test="mic!=null and mic!='' ">
					and calendar.mic like concat('%',#{mic},'%')
				</if>
				<if test="state!=null and state!='' ">
					and calendar.online_state = #{state}
				</if>
		  and to_char(calendar.put_date, 'yyyy-mm-dd') = #{select_date}
		  <![CDATA[and  (media_name <>  '百度' or ect.point_location =  '百度睿投' )]]>
		  <if test="userName!=null and userName!='' ">
			and fav.collect_user = #{userName}
		   </if>
		order by 3
	</select>

	<!-- 保存曝光核查的图片 -->
	<insert id="saveExposurePath" parameterType="com.udbac.entity.OnlineCheckInfo">
		update
		tb_amp_basic_schedule_calendar_info set exposure_file =
		#{exposureFile} where mic = #{mic}
	</insert>

	<!-- 保存点击核查的图片 -->
	<insert id="saveClickPath" parameterType="com.udbac.entity.OnlineCheckInfo">
		update
		tb_amp_basic_schedule_calendar_info set click_file = #{click_file}
		where mic = #{mic}
	</insert>

	<!-- 保存后端核查的图片 -->
	<insert id="saveAfterPath" parameterType="com.udbac.entity.OnlineCheckInfo">
		update
		tb_amp_basic_schedule_calendar_info set after_file = #{after_file}
		where mic = #{mic}
	</insert>

	<!-- 改变上线第一天的上线状态 -->
	<update id="changeState" parameterType="com.udbac.entity.OnlineCheckInfo">
		UPDATE
		tb_amp_basic_schedule_calendar_info SET online_state = #{state} WHERE
		MIC = #{mic} AND PUT_DATE = #{date}
	</update>

	<!-- 改变上线第一天的点位状态 -->
	<update id="setMicState" parameterType="com.udbac.entity.OnlineCheckInfo">
		UPDATE
		TB_AMP_BASIC_SCHEDULE_CALENDAR_INFO
		SET NOW_STATE_ID = #{mic_state}
		WHERE MIC = #{mic}
	</update>

	<!-- 查询某个点位的上一个点位状态 点位改变的时候 上一个的点位的当前状态发生改变 -->
	<select id="queryLastState" parameterType="com.udbac.entity.OnlineCheckInfo"
		resultType="String">
		select now_state_id from
		tb_amp_basic_schedule_calendar_info where mic = #{mic}
	</select>
	<!-- SELECT ECT.POINT_LOCATION, ECT.PUT_FUNCTION, ACT.ACTIVITY_NAME, ACT.ACTIVITY_CODE, 
		CUS.CUSTOMER_NAME, MEDIA.MEDIA_NAME, SCHE.MARKETING_CODE, CALENDAR.MIC, CALENDAR.ONLINE_STATE, 
		CALENDAR.PUT_DATE, CALENDAR.PUT_VALUE, CALENDAR.EXPOSURE_FILE, CALENDAR.CLICK_FILE, 
		CALENDAR.AFTER_FILE, CALENDAR.LAST_STATE_ID, CALENDAR.NOW_STATE_ID, MONI.CLICK, 
		MONI.PV, SCHE.CLICK_AVG, SCHE.EXPOSURE_AVG FROM TB_AMP_BASIC_SCHEDULE_INFO 
		AS SCHE LEFT JOIN TB_AMP_BASIC_MEDIA_INFO MEDIA ON MEDIA.MEDIA_ID = SCHE.MEDIA_ID::INTEGER 
		LEFT JOIN TB_AMP_BASIC_SCHEDULE_EXTEND_INFO ECT ON ECT.MIC = SCHE.MIC, TB_AMP_BASIC_ACTIVITY_INFO 
		AS ACT LEFT JOIN TB_AMP_BASIC_CUSTOMER_INFO AS CUS ON CUS.CUSTOMER_ID = ACT.CUSTOMER_ID::INTEGER, 
		TB_AMP_BASIC_SCHEDULE_CALENDAR_INFO AS CALENDAR LEFT JOIN ( SELECT MIC, TO_CHAR(DAYTIME, 
		'YYYY-MM-DD') AS MONI_DAY, SUM(CLEAN_CLK_PV) AS CLICK, SUM(CLEAN_IMP_PV) 
		AS PV FROM TB_AMP_BASIC_HOUR_MONITOR_DATE GROUP BY MIC, TO_CHAR(DAYTIME, 
		'YYYY-MM-DD') ) AS MONI ON MONI.MIC = CALENDAR.MIC AND MONI.MONI_DAY = TO_CHAR(CALENDAR.PUT_DATE, 
		'YYYY-MM-DD') WHERE CALENDAR.MIC = SCHE.MIC AND ACT.ACTIVITY_CODE = SCHE.ACTIVITY_CODE 
		AND CALENDAR.ONLINE_STATE LIKE #{cx_state} AND TO_CHAR(CALENDAR.PUT_DATE, 
		'YYYY-MM-DD') = #{select_date} ORDER BY CALENDAR.MIC -->
</mapper>