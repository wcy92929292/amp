<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!--   用户管理  LiQ -->

<mapper namespace="com.udbac.dao.UserDao">
<!-- 查询信息结果集 -->
	<resultMap id="UserResultMap" type="com.udbac.entity.TbAmpBasicUserInfo">
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="create_date" property="createDate" jdbcType="VARCHAR" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="pwd" property="password" jdbcType="VARCHAR" />
		<result column="real_name" property="realName" jdbcType="VARCHAR" />
		<result column="province_id" property="provinceId" jdbcType="VARCHAR" />
		<result column="mailbox" property="mailbox" jdbcType="VARCHAR" />
		<result column="phone_number" property="phoneNumber" jdbcType="VARCHAR" />
		<result column="user_state" property="userState" jdbcType="VARCHAR" />
		<result column="role_id" property="roleId" jdbcType="VARCHAR" />
		<result column="roleId" property="roleId" jdbcType="VARCHAR" />
		<result column="role_name" property="role_Name" jdbcType="VARCHAR" />
		<result column="customer_id" property="customerId" jdbcType="VARCHAR" />
		<result column="customer_name" property="customerName" jdbcType="VARCHAR" />
	</resultMap>
	<!-- 查询用户名是否存在 by LiQ -->
	<select id="queryUsername" resultType="Integer" parameterType="map">
		SELECT  count(user_name)
		FROM tb_amp_basic_user_info where user_name=#{username}
	</select>
	
	<!-- 创建用户 by LiQ -->
	<insert id="createUser" parameterType="map">
	INSERT INTO tb_amp_basic_user_info(
			create_date,user_id, user_name, password, real_name, 
			province_id,mailbox, phone_number, user_state, role_id)
	VALUES (to_char(now(),'YYYY-mm-DD HH24:mi:ss')::timestamp,
			nextval('tb_amp_basic_user_info_user_id_seq'),
			#{username},
			#{password},
			#{uname},
			#{province},
			#{email},
			#{tel}::bigint,
			'0',
			#{role}::integer);
	</insert>
	
	<!-- 查询角色表  by LiQ -->
	<select id="getRole" resultMap="UserResultMap" >
		SELECT role_id roleId,role_name
		FROM tb_amp_basic_role_info role  
	</select>
	
	<!-- 查询客户表 by LiQ -->
	<select id="getCustomer" resultMap="UserResultMap" >
		SELECT customer.customer_id customer_id,customer.customer_name  customer_name 
		FROM tb_amp_basic_customer_info as customer
	</select>
	
	<!-- 查询用户所有信息 by LiQ -->
	<select id="queryUser" resultMap="UserResultMap" parameterType="map">
		SELECT users.create_date create_date,
				users.user_id user_id ,
				users.user_name user_name,
				users.password pwd,
				users.real_name real_name,
				users.province_id province_id,
				users.mailbox mailbox,
				users.phone_number phone_number,
				users.user_state user_state,
				users.role_id role_id,
				rolea.role_name role_name,
				rolea.role_id roleId,
				customer.customer_id customer_id ,
				customer.customer_name customer_name
		FROM  tb_amp_basic_user_info as users 
		 JOIN tb_amp_basic_role_info as rolea 
		 	ON users.role_id =rolea.role_id
		 JOIN tb_amp_basic_customer_info as customer 
		 	ON users.province_id::numeric= customer.customer_id
		WHERE 1=1
			<if test="sdate != null and '' != sdate">
				<![CDATA[	AND to_char(users.create_date,'YYYY-mm-DD') >= #{sdate}]]></if> 
			<if test="edate != null and '' != edate">
				<![CDATA[	AND to_char(users.create_date,'YYYY-mm-DD') <= #{edate}]]></if>
			<if test="uname != null and '' != uname">
				AND users.real_name   LIKE '%${uname}%'</if>
			<if test="role_name != null and '' != role_name">
				AND rolea.role_name  LIKE '%${role_name}%'</if>
			<if test="user_name != null and '' != user_name">
				AND users.user_name =#{user_name}</if>	
				
		ORDER BY create_date DESC;
	</select>
	
	<!-- 根据角色编号查询用户信息  by linying -->
	<select id="queryUserById" resultType="com.udbac.entity.User">
		SELECT
		tb_user.user_id,
		tb_role.role_id,
		tb_user.role_id,
		tb_role.role_name,
		tb_user.real_name
		FROM
		tb_amp_basic_role_info as tb_role ,
		tb_amp_basic_user_info as tb_user
		WHERE tb_user.role_id = tb_role.role_id
		<if test="_roleId != 0 "> 
		     <![CDATA[  	and tb_user.role_id =#{_roleId}::integer]]>
		</if>
		ORDER
		BY
		tb_user.real_name,
		tb_role.role_id ASC

	</select>
	
	<!-- 根据用户id修改用户 by LiQ -->
	<update id="updateUser"  parameterType="map">
		UPDATE tb_amp_basic_user_info 
		SET <!-- create_date = to_char(now(),'YYYY-mm-DD HH24:mi:ss')::timestamp, -->
			user_name=#{username},
			password=#{password},
			real_name=#{uname},
			province_id=#{province},
			mailbox=#{email},
			phone_number=#{tel}::bigint,
			user_state=#{user_state}::integer,
			role_id=#{role}::integer
		 WHERE user_id = #{userid}::integer
	</update>
	
	<!-- 根据用户名删除用户 by LiQ -->
	<delete id="deleteUser"  parameterType="map">
		DELETE FROM tb_amp_basic_user_info
 		WHERE user_name=#{username};
	</delete>
	
	

</mapper>